class Solution {
public:
    int flag=0;
     unordered_map<int,int> r,v;
     vector<int> g[1000000];
    vector<int> ans,x;
    void dfs(int a)
    {
        //ans.push_back(a);
        v[a]++;
        r[a]++;
        for(auto it=g[a].begin();it!=g[a].end();it++)
        {
            if(!v[*it])
             dfs(*it);
            else if(r[*it])
            {
                flag=1;
                return;
            }
        } 
        r.erase(a);
        ans.push_back(a);
        
    }
    vector<int> findOrder(int n, vector<vector<int>>& p) {
        if(p.size()==0 && n!=0)
        {
            for(int i=0;i<n;i++)
                x.push_back(i);
            return x;
        }
        g[n+1];

        for(int i=0;i<p.size();i++)
        {
           g[p[i][0]].push_back(p[i][1]);
        }
        for(int i=0;i<p.size();i++)
            if(v.find(p[i][0]) == v.end())
            {
               dfs(p[i][0]);
            }
        for(int i=0;i<n;i++)
        {
            if(!v[i])
                ans.push_back(i);
        }
        if(flag==1)
            return x;

            return ans ;
        
    }
};
