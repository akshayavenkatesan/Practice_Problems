class Solution {
public:

    string longestPalindrome(string s) {
        int n=s.length();
        int dp[n+1][n+1];
        memset(dp, 0, sizeof(dp));
        int maxlen=1;
        int startindex=0;
        for(int i=0;i<n;i++)
        {
            dp[i][i]=1;
        }
        for(int i=0;i<n-1;i++)
        {
            if(s[i]==s[i+1])
            {
                dp[i][i+1]=1;
                startindex=i;
                maxlen=2;
            }
        }
        for(int k=3;k<=n;k++)
        {
            for(int i=0;i<=n-k;i++)
            {
                int j=i+k-1;
                if(s[i]==s[j] && dp[i+1][j-1])
                {
                    dp[i][j]=1;
                    if(k>maxlen)
                    {
                        maxlen=k;
                        startindex=i;
                        
                    }
                    
                    
                }
            }
        }
        return s.substr(startindex,maxlen);
    }
};
